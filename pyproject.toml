[tool.poetry]
name = "fastapi-project"
version = "0.1.0"
description = "FastOculist"
authors = ["Moffaty"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
fastapi = "^0.115.7"
uvicorn = "^0.34.0"
jinja2 = "^3.1.5"
starlette = "^0.45.2"
httpx = "^0.28.1"
pydantic = "^2.10.5"
pydantic-settings = "^2.7.1"
orjson = "^3.10.15"
pyproj = "^3.7.0"
onvif-zeep = "^0.2.12"
sqlmodel = "^0.0.22"
alembic = "^1.14.1"
pytesseract = "^0.3.13"
pillow = "^11.1.0"
opencv-python-headless = "^4.11.0.86"
websockets = "^15.0.1"
opencv-python = "^4.11.0.86"
python-multipart = "^0.0.20"
python-jose = "^3.4.0"
onnxruntime = "^1.21.1"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.4"
black = "^24.10.0"
mypy = "^1.14.1"
pre-commit = "^4.1.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
python_version = "3.12"
pretty = true
show_traceback = false
color_output = true
allow_redefinition = false
check_untyped_defs = true
disallow_untyped_defs = true
disallow_any_generics = false
disallow_incomplete_defs = true
ignore_missing_imports = true
implicit_reexport = false
no_implicit_optional = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.ruff]
fix = true
line-length = 120
indent-width = 4
output-format = "grouped"

[tool.ruff.lint]
select = [
    "E",     # pycodestyle
    "F",     # pyflakes
    "UP",    # pyupgrade
    "B",     # flake8-bugbear
    "I",     # isort
    "N",     # pep8-naming
    "ANN",   # flake8-annotations
    "ASYNC", # flake8-async
    "S",     # flake8-bandit
    "COM",   # flake8-commas
    "BLE",   # flake8-blind-except
    "FBT",   # flake8-boolean-trap
    "A",     # flake8-builtins
    "C4",    # flake8-comprehensions
    "ICN",   # flake8-import-conventions
    "INP",   # flake8-no-pep420
    "PIE",   # flake8-pie
    "PYI",   # flake8-pyi
    "PT",    # flake8-pytest-style
    "T20",   # flake8-print
    "Q",     # flake8-quotes
    "RET",   # flake8-return
    "SLF",   # flake8-self
    "NPY",   # numpy-specific-rules
    "AIR",   # airflow
    "PERF",  # perflint
    "FURB",  # refurb
    "RUF",   # ruff extra rules
]
ignore = [
    "ANN101",
    "ANN102",
    "ANN401",
    "W191",
    "N804",
    "N805",
    "N811",
    "E111",
    "E114",
    "E117",
    "C417",
    "FIX002",
    "S105",
    "S113",
    "S324",
    "RUF001",
    "RUF002",
    "RUF003",
    "RUF012",
    "RET504",
    "RET505",
    "RET506",
    "COM812",
    "FBT001",
    "FBT002",
    "B904",
    "PIE794",
    "PERF401",
]

[tool.ruff.lint.isort]
known-first-party = ["api", "logger", "settings"]
combine-as-imports = true
length-sort = true
detect-same-package = true
force-sort-within-sections = true
force-wrap-aliases = true
lines-after-imports = 2
section-order = [
    'future',
    'standard-library',
    'third-party',
    'first-party',
    'local-folder',
]

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = "dynamic"
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.ruff.analyze]
detect-string-imports = true
